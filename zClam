#!/bin/bash
#
#  zclam - fancy clamscan output with zenity
# 
#  2014 Konrad Merkel
# 
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
# 
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
# 
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
# 
# 

### Config ###
scandir="$1"
detect_f="/tmp/zClamDetect"
log_f="/var/log/zClam.log"
max_chars=1000
skip_freshclam=false

### Funktions ###

# usage - show help
function usage()
{
  cat - << EOF
zClam - fancy clamscan output using zenity
Usage: zClam [OPTIONS] [DIRECTORY]
       zClam [OPTIONS] -- DIRECTORY
Options:
-h  --help      - shop help
    --no-root   - try to run without root-permissions
    --no-update - skip freshclam
EOF
}

function notify_log # param: String notifiation-txt, String instance
{
	msg=$1
	instance=$2
	if [ "$instance" == "" ]; then
	  instance="zClam"
	fi
	echo $msg
	echo "`date +%d.%m.%y` `date +%H:%M:%S` $instance: $msg" >> $log_f
}

function run_freshclam # no param
{
  exec 3> >(zenity --progress --title="zClam - Freshclam" --percentage=0 --auto-close --width=600 --pulsate --no-cancel --text="Virendatenbank updaten" 2>/dev/null)
  freshclam | xargs -l1 -I%% /bin/bash -c "echo \"freshclam: %%\"; echo \"`date +%d.%m.%y` `date +%H:%M:%S` freshclam: %%\" >> $log_f"
  exec 3>&-
}

### MAIN ###

#Prüfen, ob xServer verfügbar ist
if [ "x$DISPLAY" = "x" ]; then
	echo "zClam requires a running X Window System." >&2
	echo "Exiting." >&2
	exit 1
fi

# parse options
opt_without_root=false
getopt -q -T 2>/dev/null
if [ $? -eq 4 ]; then
zClam_args=`getopt -n 'zClam' -o h -l help,no-root,no-update -- "$@"`
eval set -- "$zClam_args"
unset zClam_args
fi

while [ -n "$1" ]
do
  case $1 in
  -h|--help)
    usage
    exit 1 ;;
  --no-root)
    #echo "Script doesn't run with root authority!"
    if touch "$detect_f" && touch "$log_f"; then
      echo "User hat Schreibrechte für alle benötigten Dateien."
    else
      echo "Verwende andere Log- und Detect-Dateien"
      detect_f="./zClamDetect"
      log_f="./zClam.log"
    fi
    opt_without_root=true ;;
  --no-update)
    #echo "Skip freshclam"
    skip_freshclam=true ;;
  --)
    shift
    while [ -n "$1" ] #TODO: Scan every given dir
    do
      if [ -d "$1" ]; then
        scandir="$1"; # BUG: scans only the last
      else
        notify_log "Nicht gefunden: $1"
      fi
      shift
    done
    ;;
  *)
    shift ;;
  esac
  shift
done
# done parsing options

#Am I root?
if [ $(id -u) -ne 0 ]; then
  if [ "$opt_without_root" = false ]; then 
    echo "Please run this script as root (or set --no-root option)"  >&2
    echo "Exiting." >&2
    exit 1
  fi
fi

if [ -z "$scandir" ]; then
  scandir=`zenity --file-selection --directory`
fi

#Alte Scanergebnisse löschen
rm -f $detect_f 2>/dev/null

#Log Schreiben
echo "###############################" >> $log_f
notify_log "Start zClam"
notify_log "$scandir soll gescant werden"

#Virendatenbank updaten
if [ "$skip_freshclam" = false ]; then
  run_freshclam
fi

#Progressbar
exec 3> >(zenity --progress --title="zClam - ClamScan" --percentage=0 --no-cancel --auto-close --width=600 2>/dev/null)
echo "# Load ClamAV..." >&3

#Ermittle Anzahl an zu scannenden Dateien
fcount=$(find $scandir/ -type f | wc -l)
notify_log "$fcount Dateien in $scandir gefunden"

#Scannen
clamscan -r --no-summary $scandir | nl | awk -v fcount="$fcount" ' \
  /[0-9]+/ { \
    percent=$1/fcount*100; \
    print percent; \
    $1=""; print "#"$0 \
  } \
  $NF=="FOUND" { \
    printf $0"\n"  | "cat 1>&2" \
  } '   2> >(tee -a $detect_f | xargs -l1 -I%% echo "`date +%d.%m.%y` `date +%H:%M:%S` clamscan [FATAL]: %%" | tee -a $log_f ) >&3

errors=$(cat $detect_f )
if [ "$errors" != "" ]; then
  zenity --warning --text="Potentiell infizierte Dateien gefunden!\n`cat $detect_f`\n\nSee $log_f for more details." 2>/dev/null &
else
  notify_log "Glückwunsch! Es konnte nichts gefunden werden in $scandir." "clamscan"
  zenity --info --text="Glückwunsch! Es konnte nichts gefunden werden." 2>/dev/null &
fi

exec 3>&-

